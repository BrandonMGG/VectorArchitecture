switch:
    movi r2, 1         ; busco el valor seteado en r1
    movi r0, 1   
    cmp r2, r0          ; si es igual a 1 inicia el programa
    sig start        
    sali switch

;Probar las instrucciones basicas de la micro-arquitectura
start: 
    movi r3, 0      ; y
    movi r1, 0      ; x
    movi r12, 300   ; height
    movi r13, 300   ; width
    movi r4, 1      ; increment
    movi r9, 300    ; referencia en lut para valor 90 000 
    crg r8, r9      ; tiene valor 90 000 inicialmente guardado en direccion 300 
    movi r0, 302
    sum r2, r2, r0  ; direccion relativa a la memoria de salida[90302-180301]
;---------------------------Imagen en blanco---------------------------
loop_y:
    cmp r3, r12
    sig clear
    sum r3, r4

loop_x:
    cmp r1, r13
    sig loop_y
    sum r1, r4

    movi r0, 0         ; direccion en lut para valor white
    crg r9, r0          ; r2 tiene el valor FF FF FF        
    out r2, r9
      
    sali loop_x

clear: 
    movi r0, 0
    movi r1, 0
    movi r2, 0
    movi r3, 0
    movi r4, 0

line:
    movi r0, 75         ; lineX
    movi r1, 75         ; lineY
    movi r2, 100        ; lineWidth
    movi r4, 300        ; orange color
    movi r5, 175        ; square size
    movi r6, 1          ; increment


color_y:       ; for (int y = squareY; y < squareY + squareSize; y++)
    cmp r1, r5
    sig end
    sum r1, r6

color_x:       ; for (int x = squareX; x < squareX + squareSize; x++)
    cmp r0, r5
    sig color_y
    sum r0, r6

    movi r7, 1         ; direccion en lut para valor orange
    crg r8, r7          ; r2 tiene el valor FF3300        
    esc r8  ;
    sali color_x   
